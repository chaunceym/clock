{"version":3,"sources":["redux/reducer/index.ts","redux/reducer/todos.ts","redux/actionType.ts","redux/reducer/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","redux/actions/todos.ts","components/todos/TodosInput.tsx","components/todos/TodosItem.tsx","components/emptysvg/EmptySvg.tsx","components/todos/Todos.tsx","components/Tomatoes/CountDown.tsx","components/Tomatoes/TomatoAction.tsx","redux/actions/tomatoes.ts","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","components/statistics/Ploygon.tsx","components/statistics/todohistory/HistoryTodoItem.tsx","components/statistics/todohistory/TodoHistory.tsx","components/statistics/tomatohistory/HistoryTomatoItem.tsx","components/statistics/tomatohistory/TomatoHistory.tsx","components/statistics/Echarts.tsx","components/statistics/Statistics.tsx","components/home/Home.tsx","components/login/Login.tsx","components/signup/SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","todo","id","Object","assign","editing","tomatoes","tomato","store","createStore","rootReducer","ENV","process","publicUrl","console","log","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","Promise","reject","response","setItem","status","push","data","errors","message","account","initTodos","updateTodo","TodosInput","props","onKeyup","e","keyCode","description","postTodo","a","post","addTodo","resource","Error","setState","this","suffix","EnterOutlined","onClick","className","value","placeholder","onChange","target","onKeyUp","React","mapDispatchToProps","connect","ownProps","TodosItem","todoData","completed","completed_at","Date","put","toEditing","editTodo","editText","Editing","CheckOutlined","DeleteOutlined","deleted","Text","onDoubleClick","todoItemClass","classNames","checked","EmptySvg","viewBox","version","xmlns","p-id","width","height","d","fill","Todos","onCompletedTodos","key","onlineTodos","length","completedTodos","filter","onDeletedTodos","timeID","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","position","zIndex","mins","Math","floor","seconds","confirm","Modal","TomatoAction","showConfirm","icon","ExclamationCircleOutlined","onOk","abortTomato","onCancel","okText","cancelText","updateTomato","tomatoData","unfinishedTomato","aborted","ended_at","forceUpdate","html","undefined","tomatoStart","startAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","Component","TomatoItem","format","parseISO","TomatoList","list","dates","date","finishedTomatoes","keys","sort","b","splice","Tomatoes","addTomato","onlineTomatoes","finishedTomato","finishTomatoes","_","groupBy","Ploygon","point","firstDay","range","finishY","finishCount","pointArray","x","y","totalFinishedCount","join","stroke","strokeWidth","points","HistoryTodoItem","updateData","itemType","updated_at","created_at","TabPane","Tabs","TodoHistory","weekDays","englishWeek","finishedTodoList","finishedDates","dailyFinishedTodos","deletedTodoList","deletedDates","dailyDeletedTodos","defaultActiveKey","tab","finishedTodos","deletedTodos","HistoryTomatoItem","visible","showModal","handleOk","handleCancel","TomatoHistory","finishedTomatoList","dailyFinishedTomatoes","abortedTomatoList","abortedDates","dailyAbortedTomatoes","abortedTomatoes","Echarts","getOption","text","subtext","getMonth","tooltip","trigger","legend","toolbox","show","feature","magicType","restore","saveAsImage","calculable","xAxis","days","yAxis","series","name","todosData","itemStyle","normal","color","tomatoesData","baseDays","nowMonth","indexOf","todoMonth","toString","todoDate","forEach","tomatoMonth","tomatoDate","notMerge","option","Statistics","toggleHistory","warning","padding","margin","dailyTomato","dailyTodo","menu","Item","UserOutlined","Home","getTodos","get","resources","getTomatoes","initTomatoes","getMe","user","fontWeight","SmileOutlined","overlay","DownOutlined","Login","newState","submit","password","prefix","Password","MoreOutlined","to","SignUp","onChangeAccount","onChangePassword","onChangePasswordConfirmation","passwordConfirmation","password_confirmation","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7604ff40.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos,tomatoes})","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from '../actionType';\r\n\r\nexport default (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [action.payload,...state];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload) {\r\n          return Object.assign({}, todo, {editing: true});\r\n        } else {\r\n          return Object.assign({}, todo, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionType';\r\n\r\nexport default (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload,...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case UPDATE_TOMATO:\r\n      return state.map(tomato=> {\r\n        if (tomato.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return tomato;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducer/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import {createBrowserHistory} from 'history';\r\n\r\nconst ENV = process.env.NODE_ENV;\r\nlet publicUrl: string = '';\r\n\r\nconsole.log(ENV);\r\n\r\n\r\nif (ENV === 'development') {\r\n  publicUrl = '/';\r\n} else if (ENV === 'production') {\r\n  publicUrl = '/clock';\r\n}\r\n\r\nconst history = createBrowserHistory({\r\n  basename: publicUrl\r\n});\r\n\r\nexport default history;","import axios from 'axios';\r\nimport history from './history';\r\nimport {message} from 'antd';\r\n\r\nconst appID = '1sWsH7UDDDZazp57zzUaQgoH';\r\nconst appSecret = 'HLXMzJHYAaPqQ1ipSJQFLfPh';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  const xToken = localStorage.getItem('x-token');\r\n  if (xToken) {\r\n    config.headers['Authorization'] = `Bearer ${xToken}`;\r\n  }\r\n  return config;\r\n}, function (error) {\r\n  console.error(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor 拦截器\r\ninstance.interceptors.response.use(function (response) {\r\n  // Do something with response data\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token']);\r\n  }\r\n  return response;\r\n}, function (error) {\r\n  // Do something with response error\r\n  if (error.response.status === 401) {\r\n    history.push('/login');\r\n  } else if (error.response.status === 422 && error.response.data.errors === '账号或密码错误') {\r\n    message.error(error.response.data.errors);\r\n  } else if (error.response.status === 422 && error.response.data.errors.account[0] === 'has already been taken') {\r\n    message.error('用户名已存在');\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from '../actionType';\r\n\r\n\r\nexport const addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\nexport const initTodos = (payload: any) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\nexport const updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\nexport const editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n","import * as React from 'react';\r\nimport {Input} from 'antd';\r\nimport {EnterOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from '../../redux/actions/todos';\r\n\r\ninterface TTodosInputState {\r\n  description: string\r\n}\r\n\r\ninterface TTodosInputProps {\r\n  addTodo: (payload: any) => any\r\n}\r\n\r\nclass TodosInput extends React.Component<TTodosInputProps, TTodosInputState> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyup = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.postTodo();\r\n    }\r\n  };\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos',{description: this.state.description});\r\n      this.props.addTodo(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    this.setState({description: ''});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {description} = this.state;\r\n    const suffix = description ? <EnterOutlined onClick={this.postTodo} className=\"site-form-item-icon\"/> : <span/>;\r\n    return (\r\n      <div className=\"TodosInput\" id=\"TodosInput\">\r\n        <Input\r\n          suffix={suffix}\r\n          value={description} placeholder=\"挑选你要炖的土豆\"\r\n          onChange={(e) => this.setState({description: e.target.value})}\r\n          onKeyUp={this.onKeyup}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodosInput);","import * as React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {DeleteOutlined, CheckOutlined} from '@ant-design/icons';\r\nimport './TodosItem.scss';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos';\r\n\r\n// @ts-ignore\r\nimport classNames from 'classnames';\r\nimport axios from '../../config/axios';\r\n\r\ninterface TTodosItemProps {\r\n  id: number\r\n  description: string\r\n  completed: boolean\r\n  editing: boolean\r\n  updateTodo: (payload: any) => any\r\n  editTodo: (id: number) => any\r\n}\r\n\r\ninterface TTodosItemState {\r\n  editText: string\r\n}\r\n\r\nclass TodosItem extends React.Component<TTodosItemProps, TTodosItemState> {\r\n  constructor(props: TTodosItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description\r\n    };\r\n  }\r\n\r\n  updateTodo = async (todoData: any) => {\r\n    if (todoData.completed) {\r\n      todoData.completed_at = new Date();\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, todoData);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  toEditing = () => {\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyup = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    }\r\n  };\r\n\r\n  onClick = () => {\r\n    if (this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input value={this.state.editText}\r\n               onKeyUp={this.onKeyup}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n        />\r\n        <span className=\"icon-wrapper\">\r\n             <CheckOutlined className=\"successIcon\" onClick={this.onClick}/>\r\n          <DeleteOutlined className=\"deleteIcon\" onClick={e => this.updateTodo({deleted: true})}/>\r\n        </span>\r\n      </div>\r\n    );\r\n\r\n    const Text = <span className=\"text\" onDoubleClick={this.toEditing}>{this.props.description}</span>;\r\n    const todoItemClass = classNames({\r\n      TodosItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n    return (\r\n      <div className={todoItemClass} id=\"TodosItem\">\r\n        <Checkbox checked={this.props.completed}\r\n                  onChange={e => this.updateTodo({completed: e.target.checked})}\r\n        >\r\n        </Checkbox>\r\n        {\r\n          this.props.editing ? Editing : Text\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosItem);","import * as React from 'react';\r\nimport './EmptySvg.scss';\r\n\r\nclass EmptySvg extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"EmptySvg\" id=\"EmptySvg\">\r\n        <div className=\"emptySvg\">\r\n          <svg className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\r\n               p-id=\"2392\" width=\"64\" height=\"64\">\r\n            <path\r\n  d=\"M898.022862 0H120.540196A56.288338 56.288338 0 0 0 64.251858 56.288338v535.122993c0 30.958586 25.329752 56.288338 56.288338 56.288338h42.280218a60.126179 60.126179 0 0 0 14.263976 23.027047 13.112624 13.112624 0 0 0 6.396402 3.709913c70.48835 18.229746 87.950528 41.000937 92.108189 52.898245 4.669373 13.240552 4.349553 21.108127 4.157662 24.306328-0.703604 0.95946-0.95946 271.783122-0.959461 271.783122h30.254982s-0.63964-260.333562-0.127928-270.759698c-1.023424-20.596415-6.716222-33.900931-6.716222-33.900931-13.624336-31.02255-46.885627-52.898245-107.971267-69.336998-5.117122-6.076582-6.652258-11.065776-6.652258-15.031544v-0.063964c0-5.436942 3.390093-10.873883 9.594603-15.543257l0.511713-0.383784a44.774814 44.774814 0 0 1 7.355862-4.413518c2.558561-1.27928 5.56487-2.238741 8.507215-3.326129 4.733337-1.087388 13.112624-2.622525 26.672996-2.622525 23.602723 0 51.171216 4.605409 81.746018 13.688301 5.117122 2.302705 10.298207 4.541445 15.351365 7.291898a244.342557 244.342557 0 0 1 24.306327 14.839653l1.727029 1.023424c103.110001 72.471235 91.596477 108.99469 91.660441 108.994691a13.560372 13.560372 0 0 0 11.897308 19.828846 13.432444 13.432444 0 0 0 11.961272-7.16397c4.221625-8.059467 18.29371-48.484727-67.29015-118.653258h238.64976c-85.455931 70.104566-71.383847 110.465863-67.162222 118.461365a14.136048 14.136048 0 0 0 12.40902 7.483791c1.918921 0 4.029733-0.511712 6.012618-1.535137a13.04866 13.04866 0 0 0 5.756762-17.845961c-0.063964-0.383784-12.281092-36.971204 91.468549-109.698295a233.468674 233.468674 0 0 1 41.448685-23.218939c30.574802-8.954963 58.07933-13.624336 81.554126-13.624337 13.496408 0 21.939659 1.535136 26.545068 2.686489 2.942345 1.023424 6.076582 2.046849 8.571179 3.390093 0.511712 0.31982 0.95946 0.447748 1.471173 0.63964 2.238741 1.27928 4.413517 2.558561 6.20451 3.837842l0.31982 0.255856c6.076582 4.733337 9.530639 10.106315 9.594603 15.607221l0.127928 0.127928a24.1784 24.1784 0 0 1-6.652258 14.96758c-61.085639 16.438753-97.161347 39.849585-107.203698 69.720783-3.198201 10.042351-4.093697 12.664876-5.500906 37.099131 2.046849 5.24505 3.390093 267.177713 3.390093 267.177713h26.09732l-1.471172-271.719158c0.63964-14.839653 3.198201-23.986508 3.198201-23.986508 3.965769-11.961272 21.363983-34.860391 92.300081-53.282029a13.432444 13.432444 0 0 0 6.268474-3.709913 60.126179 60.126179 0 0 0 14.391905-23.091011 56.288338 56.288338 0 0 0 55.009057-56.288338V56.288338a56.416266 56.416266 0 0 0-56.288338-56.288338M207.339372 258.798426h120.060466c5.117122 17.909926 13.6883 63.196452-6.652259 120.380286l-1.407208 3.965769c-9.786495 27.376601-22.067587 61.469423 5.117122 131.829846 16.630645 42.983822 6.396402 67.482041-0.575677 77.844213H323.94578l-3.581985-1.407209a213.703792 213.703792 0 0 0-46.373914-11.897308c-1.27928-0.191892-2.558561-0.383784-3.837842-0.447748a186.327191 186.327191 0 0 0-19.956774-1.27928l-4.349553 0.127928a136.243363 136.243363 0 0 0-15.607221 1.151352l-3.965769 0.447748c-1.023424 0.191892-1.918921 0.447748-3.006309 0.575677 4.733337-22.323443 7.867574-55.392842-6.844151-77.460429-15.735149-23.794616-19.445062-97.097383-0.255856-152.362296 8.315323-23.666687-1.599101-66.778437-8.699106-91.468549m530.197763 256.303829c27.184709-70.48835 14.903617-104.581173 5.117122-131.957774l-1.471172-3.837841c-20.276594-57.311762-11.577488-102.598288-6.524331-120.380286h119.996502c-7.100006 24.562184-17.014429 67.609969-8.699106 91.468549 19.061278 55.392842 15.479293 128.695609-0.31982 152.42626-14.711725 22.067587-11.513524 55.136985-6.844151 77.396465l-3.198201-0.511713-2.686488-0.255856a169.12087 169.12087 0 0 0-17.526142-1.343244l-2.366669-0.127928a201.10288 201.10288 0 0 0-74.901867 15.031545c-7.036042-10.362171-17.270285-34.924355-0.639641-77.908177m189.781248 76.309076a29.423449 29.423449 0 0 1-28.144168 29.295521 44.39103 44.39103 0 0 0-8.699107-14.839652l-1.790993-1.790993-0.63964-0.63964a58.015366 58.015366 0 0 0-6.716222-5.88469l-2.366669-1.790992a75.029796 75.029796 0 0 0-6.140546-3.837842l-2.622525-1.727028-0.95946-0.383784s-0.127928 0-0.127928-0.127928c-5.117122-17.270285-12.72884-54.497345-0.95946-72.151415 22.515335-33.836967 24.050472-116.158661 3.326129-176.156912-5.56487-16.182897 3.134237-55.904554 11.321631-82.641514h5.309014a13.496408 13.496408 0 0 0 0-27.056781h-174.813667a13.432444 13.432444 0 1 0-6.140546 25.393716c-6.012618 24.050472-12.536948 71.575739 8.635143 131.062278l1.407208 4.029733c8.763071 24.370292 18.677494 52.002748-4.797302 113.024424-19.189206 49.508152-9.210819 81.682054 1.023425 98.952339-8.954963 4.733337-18.037854 10.234243-27.184709 16.438753h-310.225498l-2.686489-1.5991a266.538072 266.538072 0 0 0-24.81804-15.031545c10.234243-17.270285 20.21263-49.508152 1.023425-98.888375-23.602723-60.893747-13.6883-88.526204-4.92523-112.896496l1.535137-4.157661c21.108127-59.486539 14.647761-106.883878 8.635142-130.998314a13.432444 13.432444 0 0 0-6.076582-25.393716h-174.621775a13.496408 13.496408 0 1 0 0 26.992817H179.387095c8.187395 26.864889 16.886501 66.522581 11.321631 82.641514-20.404522 58.846899-18.805422 142.831657 3.326129 176.156912 11.705416 17.590106 4.157661 54.881129-0.95946 72.215379-0.255856 0.191892-0.767568 0.255856-1.023424 0.447748l-2.942345 1.790992a87.8226 87.8226 0 0 0-5.756762 3.581985l-2.622525 1.918921a54.113561 54.113561 0 0 0-6.396402 5.628834l-0.895496 0.895496c-0.575676 0.575676-1.27928 1.087388-1.790993 1.663065-1.599101 1.918921-2.942345 3.965769-4.285589 5.948653l-0.063964 0.191893a41.640577 41.640577 0 0 0-4.349553 8.827034h-42.280218a29.295521 29.295521 0 0 1-29.295521-29.295521V56.096446c0-16.118933 13.112624-29.295521 29.295521-29.295522h777.482666c16.118933 0 29.295521 13.176588 29.295521 29.295522l-0.127928 535.314885M480.721594 195.985758a13.496408 13.496408 0 0 0-13.496408-13.432444c-45.734274 0-84.432507-28.272097-103.110001-41.896433a119.228934 119.228934 0 0 0-10.042351-6.908115 13.560372 13.560372 0 0 0-13.752264 23.282904c1.790993 1.087388 4.477481 3.006309 7.80361 5.564869 20.980199 15.287401 64.539696 47.013555 118.973078 47.013555a13.6883 13.6883 0 0 0 13.624336-13.624336m193.299269-62.236992c-2.238741 1.407208-5.628834 3.837841-9.978387 6.908115-18.61353 13.624336-57.311762 41.832469-103.110001 41.832469a13.496408 13.496408 0 1 0 0 26.992816c54.433381 0 97.992879-31.726154 118.973078-47.013555 3.390093-2.430633 6.012618-4.477481 7.931539-5.564869a13.432444 13.432444 0 1 0-13.816229-23.154976m-68.441501 366.5778l-90.764945-40.809045a13.240552 13.240552 0 0 0-11.641452 0.31982l-80.274845 40.681117a13.432444 13.432444 0 0 0-5.948654 18.165782 13.560372 13.560372 0 0 0 18.165782 5.948654l74.518083-37.738772 84.880255 37.994628a13.36848 13.36848 0 0 0 17.845962-6.716222 13.496408 13.496408 0 0 0-6.780186-17.845962\"\r\n  fill=\"#ddd\" p-id=\"2393\"/>\r\n          </svg>\r\n        </div>\r\n        <p>No Data</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmptySvg;","import * as React from 'react';\r\nimport TodosInput from './TodosInput';\r\nimport './Todos.scss';\r\nimport {connect} from 'react-redux';\r\nimport TodosItem from './TodosItem';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport EmptySvg from '../emptysvg/EmptySvg';\r\n\r\nclass Todos extends React.Component<any> {\r\n\r\n  get onDeletedTodos() {\r\n    return this.props.todos.filter((todo: any) => !todo.deleted);\r\n  }\r\n\r\n  get onCompletedTodos() {\r\n    return this.onDeletedTodos.filter((todo: any) => !todo.completed);\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.onDeletedTodos.filter((todo: any) => todo.completed);\r\n  }\r\n\r\n  get onlineTodos(){\r\n    return this.props.todos.filter((todo:any)=>!todo.deleted)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodosInput/>\r\n        <div className=\"todoList\">\r\n          {\r\n            this.onCompletedTodos.map((todo: any) =>\r\n              <TodosItem key={todo.id}\r\n                         {...todo}\r\n              />)\r\n          }\r\n          {\r\n            this.onlineTodos.length === 0 ?\r\n              <EmptySvg/>:\r\n            this.completedTodos.map((todo: any) =>\r\n              <TodosItem key={todo.id}\r\n                         {...todo}\r\n              />)\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  initTodos\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import * as React from 'react';\r\nimport './CountDown.scss';\r\n\r\ninterface TCountDownProps {\r\n  timer: number\r\n  onFinish: () => any\r\n  duration: number\r\n}\r\n\r\ninterface TCountDownState {\r\n  countDown: number\r\n}\r\n\r\nlet timeID: any = null;\r\n\r\nclass CountDown extends React.Component<TCountDownProps, TCountDownState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    timeID = setInterval(() => {\r\n      const time = this.state.countDown;\r\n      this.setState({countDown: time - 1000});\r\n      document.title = `${this.countDown} - 土豆烧牛肉`;\r\n      if (time < 1000) {\r\n        document.title = `土豆烧牛肉`;\r\n        this.props.onFinish();\r\n        clearInterval(timeID);\r\n      }\r\n\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    clearInterval(timeID);\r\n  }\r\n\r\n  get countDown() {\r\n    const mins = Math.floor(this.state.countDown / 1000 / 60);\r\n    const seconds = Math.floor(this.state.countDown / 1000 % 60);\r\n    return `${mins < 10 ? `0${mins}` : mins}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n  };\r\n\r\n  render() {\r\n    const percent = 1 - this.state.countDown / this.props.duration;\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span style={{position: 'relative', zIndex: 1}}>\r\n                  {this.countDown}\r\n        </span>\r\n        <div className=\"progress\" style={{width: `${percent*100}%`}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountDown;","import React from 'react';\r\nimport {Button, Input} from 'antd';\r\nimport axios from '../../config/axios';\r\nimport CountDown from './CountDown';\r\nimport {CloseCircleOutlined} from '@ant-design/icons';\r\nimport './TomatoAction.scss';\r\nimport {Modal} from 'antd';\r\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\r\n\r\nconst {confirm} = Modal;\r\n\r\ninterface TTomatoActionProps {\r\n  tomatoStart: () => void\r\n  unfinishedTomato: any\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\ninterface TTomatoActionState {\r\n  description: string\r\n}\r\n\r\nclass TomatoAction extends React.Component<TTomatoActionProps, TTomatoActionState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n\r\n  showConfirm = () => {\r\n    confirm({\r\n      title: '你正在烧特别香的牛肉, 你忍心取消?',\r\n      icon: <ExclamationCircleOutlined/>,\r\n      onOk: () => {\r\n        this.abortTomato();\r\n      },\r\n      onCancel() {},\r\n      okText: '确定',\r\n      cancelText: '取消'\r\n    });\r\n  };\r\n\r\n\r\n  updateTomato = async (tomatoData: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, tomatoData);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  abortTomato = () => {\r\n    document.title = '土豆烧牛肉';\r\n    this.updateTomato({aborted: true});\r\n  };\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({description: this.state.description, ended_at: new Date()});\r\n      this.setState({description: ''});\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    let html = <div/>;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <div className=\"button-wrapper\">\r\n        <Button onClick={() => this.props.tomatoStart()}>开始烧牛肉</Button>\r\n      </div>;\r\n    } else {\r\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startAt > duration) {\r\n        html = <div className=\"input-wrapper\">\r\n          <Input value={this.state.description}\r\n                 onChange={(e) => this.setState({description: e.target.value})}\r\n                 onKeyUp={this.onKeyUp}\r\n                 placeholder=\"请说出刚刚烧的牛肉味道怎么样\"\r\n          />\r\n          <CloseCircleOutlined className=\"closeIcon\" onClick={this.showConfirm}/>\r\n        </div>;\r\n      } else if (timeNow - startAt < duration) {\r\n        const timer = duration - timeNow + startAt;\r\n        html = <div className=\"countDown-wrapper\">\r\n          <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n          <CloseCircleOutlined className=\"closeIcon\" onClick={this.showConfirm}/>\r\n        </div>;\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoAction;","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionType';\r\n\r\n\r\nexport const addTomato = (payload:any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\nexport const initTomatoes = (payload:any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\nexport const updateTomato = (payload:any[]) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n","import * as React from 'react';\r\nimport {format,parseISO} from 'date-fns';\r\nimport './TomatoList.scss'\r\ninterface TTomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = (props:any) => {\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span>{format(parseISO(props.started_at), 'HH:mm')}-{format(parseISO(props.ended_at), 'HH:mm')} :</span>\r\n      <span>{props.description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component<TTomatoListProps> {\r\n\r\n\r\n\r\n  get dates() {\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0,3);\r\n  }\r\n\r\n  render() {\r\n    const list = this.dates.map(date => {\r\n      const tomatoes = this.props.finishedTomatoes[date];\r\n      return (\r\n        <div key={date}>\r\n          <div className=\"title\">\r\n            <span>{date}</span>\r\n            <span>烧了 {tomatoes.length} 个土豆牛肉</span>\r\n          </div>\r\n          {\r\n            tomatoes.map((tomato:any)=><TomatoItem key={tomato.id} {...tomato} />)\r\n          }\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import React from 'react';\r\nimport './Tomatoes.scss';\r\nimport TomatoAction from './TomatoAction';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes';\r\nimport axios from '../../config/axios';\r\nimport TomatoList from './TomatoList';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\nimport {format, parseISO} from 'date-fns';\r\nimport EmptySvg from '../emptysvg/EmptySvg';\r\n\r\ninterface TTomatoes {\r\n  addTomato: (payload: Object) => Object\r\n  tomatoes: any[]\r\n  initTomatoes: (payload: any) => any\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\nclass Tomatoes extends React.Component<TTomatoes> {\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(tomato => !tomato.description && !tomato.ended_at && !tomato.aborted)[0];\r\n  }\r\n\r\n  get finishedTomato() {\r\n    const finishTomatoes = this.props.tomatoes.filter(tomato => tomato.description && tomato.ended_at && !tomato.aborted);\r\n    const tomatoDate = _.groupBy(finishTomatoes, (tomato: any) => {\r\n        return format(parseISO(tomato.started_at), 'yyyy-MM-dd');\r\n      }\r\n    );\r\n    return tomatoDate;\r\n  }\r\n\r\n  tomatoStart = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  get onlineTomatoes(){\r\n    return this.props.tomatoes.filter(tomato=>!tomato.aborted)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction tomatoStart={this.tomatoStart}\r\n                      updateTomato={this.props.updateTomato}\r\n                      unfinishedTomato={this.unfinishedTomato}\r\n\r\n        />\r\n        <div className=\"tomatoList\">\r\n          {\r\n            this.onlineTomatoes.length === 0 ?\r\n              <EmptySvg/>:\r\n              <TomatoList finishedTomatoes={this.finishedTomato}/>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import * as React from 'react';\r\n\r\ninterface SPloygonProps {\r\n  data: any\r\n  totalFinishedCount: any\r\n}\r\n\r\nclass Ploygon extends React.Component<SPloygonProps> {\r\n  point = () => {\r\n    const dates = Object.keys(this.props.data).sort((a, b) => {\r\n      return Date.parse(a) - Date.parse(b);\r\n    });\r\n    const firstDay = dates[0];\r\n    const range = new Date().getTime() - Date.parse(firstDay);\r\n    if (firstDay) {\r\n      let finishCount = 0;\r\n      let finishY;\r\n      const pointArray = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 300;\r\n        finishCount += this.props.data[date].length;\r\n        const y = (1 - finishCount / this.props.totalFinishedCount) * 60;\r\n        finishY = y;\r\n        return `${x},${y}`;\r\n      });\r\n      return ['0,60', ...pointArray, `300,${finishY}`, '300,60'].join(' ');\r\n    }\r\n    return '0,60 300,60';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Ploygon\" id=\"Ploygon\">\r\n        <svg>\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" points={this.point()}/>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ploygon;","import * as React from 'react';\r\nimport {format, parseISO} from 'date-fns';\r\nimport './HistoryTodoItem.scss';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../../redux/actions/todos';\r\nimport axios from '../../../config/axios';\r\nimport {Pagination} from 'antd';\r\n\r\ninterface SHistoryTodoItemProps {\r\n  todo: any\r\n  updated_at: any\r\n  description: string\r\n  itemType: string\r\n  updateTodo: (payload: any) => any\r\n}\r\n\r\nclass HistoryTodoItem extends React.Component<SHistoryTodoItemProps> {\r\n  updateTodo = async (updateData: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.todo.id}`, updateData);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let action, time;\r\n    if (this.props.itemType === 'finished') {\r\n      time = this.props.todo.updated_at;\r\n      action = (<div className=\"action\">\r\n        <span onClick={() => this.updateTodo({completed: false})}>恢复</span>\r\n        <span onClick={() => this.updateTodo({deleted: true})}>删除</span>\r\n      </div>);\r\n    } else if (this.props.itemType === 'deleted') {\r\n      time = this.props.todo.created_at;\r\n      action = (<div className=\"action\">\r\n        <span onClick={() => this.updateTodo({deleted: false})}>恢复</span>\r\n      </div>);\r\n    }\r\n    return (\r\n      <div className=\"HistoryTodoItem\" id=\"HistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span>{format(parseISO(time), 'HH:mm')}:</span>\r\n          <span>{this.props.todo.description}</span>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryTodoItem);\r\n\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\nimport {format, parseISO} from 'date-fns';\r\nimport {Tabs} from 'antd';\r\nimport './TodoHistory.scss';\r\nimport HistoryTodoItem from './HistoryTodoItem';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface STodoHistoryProps {\r\n  todos: any[]\r\n}\r\n\r\nclass TodoHistory extends React.Component<STodoHistoryProps> {\r\n  get finishedTodos() {\r\n    return this.props.todos.filter((todo: any) => todo.completed && !todo.deleted);\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter((todo: any) => todo.deleted);\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo: any) => {\r\n      return format(parseISO(todo.completed_at), 'yyyy-MM-dd');\r\n    });\r\n  }\r\n\r\n  get dailyDeletedTodos() {\r\n    return _.groupBy(this.deletedTodos, (todo: any) => {\r\n      return format(parseISO(todo.updated_at), 'yyyy-MM-dd');\r\n    });\r\n  }\r\n\r\n  weekDays = (date: any) => {\r\n    const weekDay: any = {\r\n      'Monday': '周一',\r\n      'Tuesday': '周二',\r\n      'Wednesday': '周三',\r\n      'Thursday': '周四',\r\n      'Friday': '周五',\r\n      'Saturday': '周六',\r\n      'Sunday': '周日',\r\n    };\r\n    const englishWeek = format(parseISO(date), 'eeee');\r\n    return weekDay[`${englishWeek}`];\r\n  };\r\n\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) =>\r\n      Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  get deletedDates() {\r\n    return Object.keys(this.dailyDeletedTodos).sort((a, b) =>\r\n      Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"todosTitle\">\r\n            <p>\r\n              <span className=\"date\">{date}</span>\r\n              <span className=\"week\">{this.weekDays(date)}</span>\r\n            </p>\r\n            <p className=\"mission\">\r\n              炖成了 {this.dailyFinishedTodos[date].length} 个土豆\r\n            </p>\r\n          </div>\r\n          <div className=\"todosBody\">\r\n            {\r\n              this.dailyFinishedTodos[date].map((todo: any) =>\r\n                <HistoryTodoItem itemType=\"finished\" key={todo.id} todo={todo}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const deletedTodoList = this.deletedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"todosTitle\">\r\n            <p>\r\n              <span className=\"date\">{date}</span>\r\n              <span className=\"week\">{this.weekDays(date)}</span>\r\n            </p>\r\n            <p className=\"mission\">\r\n              扔掉了 {this.dailyDeletedTodos[date].length} 个土豆\r\n            </p>\r\n          </div>\r\n          <div className=\"todosBody\">\r\n            {\r\n              this.dailyDeletedTodos[date].map((todo: any) =>\r\n                <HistoryTodoItem itemType=\"deleted\" key={todo.id} todo={todo}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成的任务\" key=\"1\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除的任务\" key=\"2\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);\r\n\r\n","import * as React from 'react';\r\nimport {format, parseISO} from 'date-fns';\r\nimport './HistoryTomatoItem.scss';\r\nimport {connect} from 'react-redux';\r\nimport {Modal,Input} from 'antd';\r\nimport axios from '../../../config/axios';\r\nimport {updateTomato} from '../../../redux/actions/tomatoes';\r\n\r\ninterface SHistoryTodoItemProps {\r\n  tomato: any\r\n  description: string\r\n  itemType: string\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\ninterface SHistoryTodoItemState {\r\n  visible: boolean\r\n  description:string\r\n}\r\n\r\nclass HistoryTomatoItem extends React.Component<SHistoryTodoItemProps, SHistoryTodoItemState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  updateTomato = async (updateData: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.tomato.id}`, updateData);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({description: this.state.description});\r\n      this.setState({\r\n        visible: false\r\n      });\r\n    }\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    if (this.state.description !== '') {\r\n      this.updateTomato({description: this.state.description});\r\n    }\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let action, time;\r\n    if (this.props.itemType === 'finished') {\r\n      time = this.props.tomato.ended_at;\r\n      action = (<div className=\"action\">\r\n        <span onClick={this.showModal}>修改</span>\r\n      </div>);\r\n    }\r\n    return (\r\n      <div className=\"HistoryTomatoItem\" id=\"HistoryTomatoItem\">\r\n        <div className=\"text\">\r\n          <span>{format(parseISO(time), 'HH:mm')}:</span>\r\n          <span>{this.props.tomato.description}</span>\r\n        </div>\r\n        {action}\r\n        <Modal\r\n          title=\"修改描述\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          cancelText=\"取消\"\r\n          okText=\"确定\"\r\n        >\r\n          <Input placeholder=\"请输入修改的值\"\r\n                 value={this.state.description}\r\n                 onChange={(e)=>this.setState({description:e.target.value})}\r\n                 onKeyUp={this.onKeyUp}\r\n                 />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  updateTomato\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryTomatoItem);\r\n\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\nimport {format, parseISO} from 'date-fns';\r\nimport {Tabs} from 'antd';\r\nimport './TomatoHistory.scss';\r\nimport HistoryTomatoItem from './HistoryTomatoItem';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface STodoHistoryProps {\r\n  tomatoes: any[]\r\n}\r\n\r\nclass TomatoHistory extends React.Component<STodoHistoryProps> {\r\n  get finishedTomatoes() {\r\n    return this.props.tomatoes.filter((tomato: any) => tomato.ended_at && !tomato.aborted);\r\n  }\r\n\r\n  get dailyFinishedTomatoes() {\r\n    return _.groupBy(this.finishedTomatoes, (tomato: any) => {\r\n      return format(parseISO(tomato.ended_at), 'yyyy-MM-dd');\r\n    });\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTomatoes).sort((a, b) =>\r\n      Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  get abortedTomatoes() {\r\n    return this.props.tomatoes.filter((tomato: any) => tomato.aborted);\r\n  }\r\n\r\n  get dailyAbortedTomatoes() {\r\n    return _.groupBy(this.abortedTomatoes, (tomato: any) => {\r\n      return format(parseISO(tomato.created_at), 'yyyy-MM-dd');\r\n    });\r\n  }\r\n\r\n  get abortedDates() {\r\n    return Object.keys(this.dailyAbortedTomatoes).sort((a, b) =>\r\n      Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  weekDays = (date: any) => {\r\n    const weekDay:any = {\r\n      'Monday': '周一',\r\n      'Tuesday': '周二',\r\n      'Wednesday': '周三',\r\n      'Thursday': '周四',\r\n      'Friday': '周五',\r\n      'Saturday': '周六',\r\n      'Sunday': '周日',\r\n    };\r\n    const englishWeek = format(parseISO(date), 'eeee');\r\n    return weekDay[`${englishWeek}`];\r\n  };\r\n\r\n  render() {\r\n    const finishedTomatoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"todosTitle\">\r\n            <p>\r\n              <span className=\"date\">{date}</span>\r\n              <span className=\"week\">{this.weekDays(date)}</span>\r\n            </p>\r\n            <p className=\"mission\">\r\n              烧成了 {this.dailyFinishedTomatoes[date].length} 个牛肉\r\n            </p>\r\n          </div>\r\n          <div className=\"todosBody\">\r\n            {\r\n              this.dailyFinishedTomatoes[date].map((tomato: any) =>\r\n                <HistoryTomatoItem itemType=\"finished\" key={tomato.id} tomato={tomato}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const abortedTomatoList = this.abortedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"todosTitle\">\r\n            <p>\r\n              <span className=\"date\">{date}</span>\r\n              <span className=\"week\">{this.weekDays(date)}</span>\r\n            </p>\r\n            <p className=\"mission\">\r\n              烧糊了 {this.dailyAbortedTomatoes[date].length} 个牛肉\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成的任务\" key=\"1\">\r\n          <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n            {finishedTomatoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除的任务\" key=\"2\">\r\n          <div className=\"TomatoHistory\" id=\"TomatoHistory\">\r\n            {abortedTomatoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(TomatoHistory);\r\n\r\n","import * as React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport {connect} from 'react-redux';\r\nimport {format, parseISO} from 'date-fns';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\n\r\ninterface SEchartsProps {\r\n  tomatoes: any[]\r\n  todos: any[]\r\n}\r\n\r\ninterface SEchartsState {\r\n  days: object\r\n  todosData: any\r\n  tomatoesData: any\r\n}\r\n\r\nclass Echarts extends React.Component<SEchartsProps, SEchartsState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      days: [],\r\n      todosData: [],\r\n      tomatoesData: []\r\n    };\r\n  }\r\n\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter((todo: any) => todo.completed && !todo.deleted);\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (tomato: any) => {\r\n      const month = format(parseISO(tomato.completed_at), 'M');\r\n      if (month === (new Date().getMonth() + 1).toString()) {\r\n        return format(parseISO(tomato.completed_at), 'd');\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  get todoDate() {\r\n    return Object.keys(this.dailyFinishedTodos);\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    return this.props.tomatoes.filter((tomato: any) => tomato.ended_at && !tomato.aborted);\r\n  }\r\n\r\n\r\n  get dailyFinishedTomatoes() {\r\n    return _.groupBy(this.finishedTomatoes, (tomato: any) => {\r\n      const month = format(parseISO(tomato.ended_at), 'M');\r\n      if (month === (new Date().getMonth() + 1).toString()) {\r\n        return format(parseISO(tomato.ended_at), 'd');\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  get todoMonth() {\r\n    if (this.finishedTodos[0]) {\r\n      return format(parseISO(this.finishedTodos[0].completed_at), 'M');\r\n    }\r\n  }\r\n\r\n  get tomatoMonth() {\r\n    if (this.finishedTomatoes[0]) {\r\n      return format(parseISO(this.finishedTomatoes[0].ended_at), 'M');\r\n    }\r\n  }\r\n\r\n  get tomatoDate() {\r\n    return Object.keys(this.dailyFinishedTomatoes);\r\n  }\r\n\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: '汇总统计',\r\n        subtext: `${new Date().getMonth() + 1}月汇总`\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis'\r\n      },\r\n      legend: {\r\n        data: ['土豆', '牛肉']\r\n      },\r\n      toolbox: {\r\n        show: true,\r\n        feature: {\r\n          magicType: {show: true, type: ['line', 'bar']},\r\n          restore: {show: true},\r\n          saveAsImage: {show: true}\r\n        }\r\n      },\r\n      calculable: true,\r\n      xAxis: [\r\n        {\r\n          type: 'category',\r\n          data: this.state.days\r\n        }\r\n      ],\r\n      yAxis: [\r\n        {\r\n          type: 'value'\r\n        }\r\n      ],\r\n      series: [\r\n        {\r\n          name: '土豆',\r\n          type: 'bar',\r\n          data: this.state.todosData,\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#EBA6A6'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: '牛肉',\r\n          type: 'bar',\r\n          data: this.state.tomatoesData,\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#1890FF'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const baseDays = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18'\r\n      , '19', '20', '21', '22', '23', '24', '25', '26', '27', '28'];\r\n    let todosData = ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'];\r\n    let tomatoesData = ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'];\r\n    const nowMonth = new Date().getMonth() + 1;\r\n    if ([1, 3, 5, 7, 8, 10, 12].indexOf(nowMonth) >= 0) {\r\n      this.setState({days: [...baseDays, '29', '30', '31']});\r\n      todosData.push('0', '0', '0');\r\n      tomatoesData.push('0', '0', '0');\r\n    } else if ([4, 6, 9, 11].indexOf(nowMonth) >= 0) {\r\n      this.setState({days: [...baseDays, '29', '30']});\r\n      todosData.push('0', '0');\r\n      tomatoesData.push('0', '0');\r\n    } else if (nowMonth === 2) {\r\n      this.setState({days: [...baseDays]});\r\n    }\r\n\r\n    if (this.todoMonth && this.todoMonth === nowMonth.toString()) {\r\n      this.todoDate.forEach((date: any) => {\r\n        if (date === undefined) {\r\n          return;\r\n        }\r\n        todosData[date - 1] = this.dailyFinishedTodos[date].length;\r\n      });\r\n    }\r\n    if (this.tomatoMonth && this.tomatoMonth === nowMonth.toString()) {\r\n      this.tomatoDate.forEach((date: any) => {\r\n        if (date === undefined) {\r\n          return;\r\n        }\r\n        tomatoesData[date - 1] = this.dailyFinishedTomatoes[date].length;\r\n      });\r\n    }\r\n\r\n    this.setState({todosData: [...todosData]});\r\n    this.setState({tomatoesData: [...tomatoesData]});\r\n\r\n  }\r\n\r\n  render() {\r\n    console.log(this.dailyFinishedTomatoes);\r\n    return (\r\n      <div className=\"Echarts\" id=\"Echarts\">\r\n        <ReactEcharts notMerge={true}  option={this.getOption()}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Echarts);\r\n","import * as React from 'react';\r\nimport './Statistics.scss';\r\nimport {connect} from 'react-redux';\r\nimport Ploygon from './Ploygon';\r\nimport TodoHistory from './todohistory/TodoHistory';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\nimport {format, parseISO} from 'date-fns';\r\nimport TomatoHistory from './tomatohistory/TomatoHistory';\r\nimport Echarts from './Echarts';\r\nimport {message} from 'antd';\r\n\r\n\r\ninterface SStatisticsProps {\r\n  todos: any[]\r\n  tomatoes: any[]\r\n}\r\n\r\ninterface SStatisticsState {\r\n  visible: any\r\n}\r\n\r\n\r\nclass Statistics extends React.Component<SStatisticsProps, SStatisticsState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      visible: ''\r\n    };\r\n  }\r\n\r\n\r\n  get finishedTomatoes() {\r\n    return this.props.tomatoes.filter(tomato => tomato.description && !tomato.aborted);\r\n  }\r\n\r\n  get dailyTomato() {\r\n    return _.groupBy(this.finishedTomatoes, (tomato: any) => {\r\n      return format(parseISO(tomato.ended_at), 'yyyy-MM-d');\r\n    });\r\n  }\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(todo => todo.completed && !todo.deleted);\r\n  }\r\n\r\n  get dailyTodo() {\r\n    return _.groupBy(this.finishedTodos, (todo: any) => {\r\n      return format(parseISO(todo.completed_at), 'yyyy-MM-d');\r\n    });\r\n  }\r\n\r\n  toggleHistory = (history: string) => {\r\n    if (history === 'echarts') {\r\n      this.setState({visible: <Echarts/>});\r\n    } else if (history === 'tomatoes') {\r\n      if(this.finishedTomatoes.length === 0){\r\n        message.warning('还没有完成的牛肉')\r\n      }else{\r\n        this.setState({visible: <TomatoHistory/>});\r\n      }\r\n    } else if (history === 'todos') {\r\n      if(this.finishedTodos.length === 0){\r\n        message.warning('还没有完成的土豆')\r\n      }else{\r\n        this.setState({visible: <TodoHistory/>});\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <ul className=\"ulNode\">\r\n          <li onClick={() => this.toggleHistory('echarts')}>\r\n            <h2>\r\n              统计\r\n            </h2>\r\n            <div>\r\n              <p style={{padding: '0', margin: '0'}}>{new Date().getMonth() + 1}月累积</p>\r\n              <h1>{this.finishedTomatoes.length + this.finishedTodos.length}</h1>\r\n            </div>\r\n            <div className=\"echartsPloygon\">\r\n              <svg width=\"100%\" height=\"60\">\r\n                  <rect fill=\"rgba(215,78,78,0.5)\" x=\"84.39999999999999\" y=\"0\" width=\"16\" height=\"60\"></rect>\r\n                  <rect fill=\"rgba(215,78,78,0.5)\" x=\"115.2\" y=\"50\" width=\"16\" height=\"20\"></rect>\r\n                  <rect fill=\"rgba(215,78,78,0.5)\" x=\"146\" y=\"40.00000000000001\" width=\"16\"\r\n                        height=\"19.999999999999993\"></rect>\r\n                  <rect fill=\"rgba(215,78,78,0.5)\" x=\"176.79999999999998\" y=\"59\" width=\"16\" height=\"1\"></rect>\r\n                  <rect fill=\"rgba(215,78,78,0.5)\" x=\"207.6\" y=\"59\" width=\"16\" height=\"10\"></rect>\r\n                  <rect fill=\"rgba(215,78,78,0.5)\" x=\"238.4\" y=\"59\" width=\"16\" height=\"1\"></rect>\r\n                  <rect fill=\"rgba(215,78,78,0.5)\" x=\"269.2\" y=\"59\" width=\"16\" height=\"1\"></rect>\r\n              </svg>\r\n            </div>\r\n          </li>\r\n          <li onClick={() => this.toggleHistory('tomatoes')}>\r\n            <h2>\r\n              牛肉历史\r\n            </h2>\r\n            <div>\r\n              <p style={{padding: '0', margin: '0'}}>累计烧成牛肉:</p>\r\n              <h1>{this.finishedTomatoes.length}</h1>\r\n            </div>\r\n            <Ploygon data={this.dailyTomato} totalFinishedCount={this.finishedTomatoes.length}/>\r\n          </li>\r\n          <li onClick={() => this.toggleHistory('todos')}>\r\n            <h2>\r\n              土豆历史\r\n            </h2>\r\n            <div>\r\n              <p style={{padding: '0', margin: '0'}}>累计炖成土豆:</p>\r\n              <h1>{this.finishedTodos.length}</h1>\r\n            </div>\r\n            <Ploygon data={this.dailyTodo} totalFinishedCount={this.finishedTodos.length}/>\r\n          </li>\r\n        </ul>\r\n        {\r\n          this.state.visible\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n\r\n","import * as React from 'react';\r\nimport {Button, Dropdown, Menu} from 'antd';\r\nimport {UserOutlined, DownOutlined, SmileOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport history from '../../config/history';\r\nimport './Home.scss';\r\nimport Todos from '../todos/Todos';\r\nimport Tomatoes from '../Tomatoes/Tomatoes';\r\nimport Statistics from '../statistics/Statistics';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport {initTomatoes} from '../../redux/actions/tomatoes';\r\n\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('/login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\">\r\n      <UserOutlined/>\r\n      偏好设置\r\n    </Menu.Item>\r\n    <Menu.Item key=\"2\" onClick={logout}>\r\n      <UserOutlined/>\r\n      退出登录\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map((todo: any) => Object.assign({}, todo, {editing: false}));\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes');\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getMe();\r\n    await this.getTodos();\r\n    await this.getTomatoes();\r\n  }\r\n\r\n  getMe = async () => {\r\n    const response = await axios.get('me');\r\n    this.setState({user: response.data});\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Index\" id=\"Index\">\r\n        <header>\r\n          <h2 className=\"logo\">\r\n            <strong style={{margin: '4px', fontWeight: 'bold'}}><SmileOutlined/></strong>\r\n            <strong>土豆烧牛肉</strong></h2>\r\n          <Dropdown overlay={menu}>\r\n            <Button className=\"userButton\">\r\n              <span><strong>欢迎 {this.state.user && this.state.user.account}</strong></span>\r\n              <DownOutlined className=\"userIcon\"/>\r\n            </Button>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Todos/>\r\n          <Tomatoes/>\r\n        </main>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import axios from '../../config/axios';\r\nimport * as React from 'react';\r\nimport {Input, Button, message} from 'antd';\r\nimport {UserOutlined, MoreOutlined} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Login.scss';\r\n\r\ninterface ILoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\nclass Login extends React.Component<any, ILoginState> {\r\n  // 第一个参数是声明 props 第二个参数声明 state\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    const newState = {};\r\n    // @ts-ignore\r\n    newState[key] = value;\r\n    this.setState(newState);\r\n  };\r\n  submit = async () => {\r\n    if (this.state.account === '') {\r\n      return message.warning('请输入用户名');\r\n    } else if (this.state.password === '') {\r\n      return message.warning('请输入密码');\r\n    }\r\n    const {account, password} = this.state;\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>番茄闹钟登录</h1>\r\n        <Input\r\n          placeholder=\"请输入用户名\"\r\n          value={account}\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          onChange={(e) => this.onChange('account', e.target.value)}\r\n        />\r\n        <Input.Password\r\n          prefix={<MoreOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          value={password}\r\n          onChange={(e) => this.onChange('password', e.target.value)}\r\n          placeholder=\"请输入密码\"/>\r\n        <Button className=\"LoginButton\" onClick={this.submit} type={'primary'}>登录</Button>\r\n        <p>如果你没有账号,请立即<Link to={'/signup'}>注册</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import axios from '../../config/axios';\r\nimport * as React from 'react';\r\nimport {Input, Button, message} from 'antd';\r\nimport {UserOutlined, MoreOutlined} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './SignUp.scss';\r\n\r\ninterface ISignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConfirmation: string\r\n}\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  // 第一个参数是声明 props 第二个参数声明 state\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConfirmation: ''\r\n    };\r\n  }\r\n\r\n  onChangeAccount = (e: any) => {\r\n    this.setState({account: e.target.value});\r\n  };\r\n\r\n  onChangePassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  };\r\n  onChangePasswordConfirmation = (e: any) => {\r\n    this.setState({passwordConfirmation: e.target.value});\r\n  };\r\n  submit = async () => {\r\n    if (this.state.account === '') {\r\n      return message.warning('请输入用户名');\r\n    } else if (this.state.password === '') {\r\n      return message.warning('请输入密码');\r\n    }else if(this.state.passwordConfirmation === ''){\r\n      return message.warning('请确认密码');\r\n    }\r\n    const {account, password, passwordConfirmation} = this.state;\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        password_confirmation: passwordConfirmation,\r\n        account,\r\n        password\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {account, password, passwordConfirmation} = this.state;\r\n    return (\r\n      <div className=\"Component\" id=\"SignUp\">\r\n        <h1>番茄闹钟注册</h1>\r\n        <Input\r\n          placeholder=\"请输入用户名\"\r\n          value={account}\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          onChange={this.onChangeAccount}\r\n        />\r\n        <Input.Password\r\n          prefix={<MoreOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          value={password} onChange={this.onChangePassword} placeholder=\"请输入密码\"/>\r\n        <Input.Password\r\n          prefix={<MoreOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          value={passwordConfirmation} onChange={this.onChangePasswordConfirmation} placeholder=\"请确认密码\"/>\r\n        <Button className=\"SignUpButton\" onClick={this.submit} type={'primary'}>注册</Button>\r\n        <p>如果你有账号,请立即<Link to={'/login'}>登录</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\nimport './App.css';\nimport history from './config/history';\nimport { Router, Route } from \"react-router-dom\";\nimport Home from './components/home/Home'\nimport Login from './components/login/Login'\nimport SignUp from './components/signup/SignUp'\nclass App extends React.Component{\n  render(){\n    return (\n      <Router history={history}>\n        <div>\n        <Route exact={true} path='/' component={Home}/>\n        <Route  path='/login' component={Login}/>\n        <Route  path='/signup' component={SignUp}/>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are consideeed localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n)\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}