{"version":3,"sources":["redux/reducer/index.ts","redux/reducer/todos.ts","redux/actionType.ts","redux/reducer/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","redux/actions/todos.ts","components/todos/TodosInput.tsx","components/todos/TodosItem.tsx","components/todos/Todos.tsx","components/Tomatoes/CountDown.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/statistics/Ploygon.tsx","components/statistics/history/HistoryTodoItem.tsx","components/statistics/history/TodoHistory.tsx","components/statistics/Statistics.tsx","components/home/Home.tsx","components/login/Login.tsx","components/signup/SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","todo","id","Object","assign","editing","tomatoes","tomato","store","createStore","rootReducer","publicUrl","history","createBrowserHistory","basename","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","initTodos","updateTodo","TodosInput","props","onKeyup","e","keyCode","description","postTodo","a","post","addTodo","data","resource","Error","setState","this","suffix","EnterOutlined","onClick","className","value","placeholder","onChange","target","onKeyUp","React","mapDispatchToProps","connect","ownProps","TodosItem","todoData","completed","completed_at","Date","put","toEditing","editTodo","editText","Editing","CheckOutlined","DeleteOutlined","deleted","Text","onDoubleClick","todoItemClass","classNames","checked","Todos","onCompletedTodos","key","completedTodos","filter","onDeletedTodos","timeID","CountDown","countDown","timer","setInterval","time","document","title","onFinish","clearInterval","percent","duration","style","position","zIndex","width","mins","Math","floor","seconds","confirm","Modal","TomatoAction","showConfirm","icon","ExclamationCircleOutlined","onOk","abortTomato","onCancel","okText","cancelText","updateTomato","tomatoData","unfinishedTomato","aborted","ended_at","forceUpdate","html","undefined","tomatoStart","startAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","Component","TomatoItem","format","parseISO","TomatoList","list","dates","date","finishedTomatoes","length","keys","sort","b","splice","Tomatoes","addTomato","finishedTomato","finishTomatoes","_","groupBy","Ploygon","point","log","firstDay","range","finishY","finishCount","pointArray","x","totalFinishedCount","y","join","fill","stroke","strokeWidth","points","HistoryTodoItem","updateData","itemType","updated_at","created_at","TabPane","Tabs","TodoHistory","finishedTodoList","finishedDates","dailyFinishedTodos","deletedTodoList","deletedDates","dailyDeletedTodos","defaultActiveKey","tab","finishedTodos","deletedTodos","Statistics","dailyTodo","obj","menu","Item","UserOutlined","Home","getTodos","get","resources","getTomatoes","initTomatoes","getMe","user","overlay","account","DownOutlined","Login","newState","submit","password","prefix","color","Password","MoreOutlined","to","SignUp","onChangeAccount","onChangePassword","onChangePasswordConfirmation","passwordConfirmation","password_confirmation","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.edf8d9bb.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos,tomatoes})","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from '../actionType';\r\n\r\nexport default (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [action.payload,...state];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload) {\r\n          return Object.assign({}, todo, {editing: true});\r\n        } else {\r\n          return Object.assign({}, todo, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionType';\r\n\r\nexport default (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload,...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case UPDATE_TOMATO:\r\n      return state.map(tomato=> {\r\n        if (tomato.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return tomato;\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducer/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import {createBrowserHistory} from 'history';\r\n\r\nconst ENV = process.env.NODE_ENV\r\nlet publicUrl:string = ''\r\n\r\nif(ENV === 'development'){\r\n  publicUrl = '/'\r\n}else if(ENV === 'production'){\r\n  publicUrl = '/clock'\r\n}\r\n\r\nconst history = createBrowserHistory({\r\n  basename: publicUrl\r\n});\r\n\r\nexport default history;","import axios from 'axios';\r\nimport history from './history';\r\n\r\nconst appID = '1sWsH7UDDDZazp57zzUaQgoH';\r\nconst appSecret = 'HLXMzJHYAaPqQ1ipSJQFLfPh';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://gp-server.hunger-valley.com/',\r\n  headers: {\r\n    't-app-id': appID,\r\n    't-app-secret': appSecret\r\n  }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  const xToken = localStorage.getItem('x-token');\r\n  if (xToken) {\r\n    config.headers['Authorization'] = `Bearer ${xToken}`;\r\n  }\r\n  return config;\r\n}, function (error) {\r\n  console.error(error);\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor 拦截器\r\ninstance.interceptors.response.use(function (response) {\r\n  // Do something with response data\r\n  if (response.headers['x-token']) {\r\n    localStorage.setItem('x-token', response.headers['x-token']);\r\n  }\r\n  return response;\r\n}, function (error) {\r\n  // Do something with response error\r\n  if (error.response.status === 401) {\r\n    history.push('/login');\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from '../actionType';\r\n\r\n\r\nexport const addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\nexport const initTodos = (payload: any) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\nexport const updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\nexport const editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n","import * as React from 'react';\r\nimport {Input} from 'antd';\r\nimport {EnterOutlined} from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport {connect} from 'react-redux';\r\nimport {addTodo} from '../../redux/actions/todos';\r\n\r\ninterface TTodosInputState {\r\n  description: string\r\n}\r\n\r\ninterface TTodosInputProps {\r\n  addTodo: (payload: any) => any\r\n}\r\n\r\nclass TodosInput extends React.Component<TTodosInputProps, TTodosInputState> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  onKeyup = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.postTodo();\r\n    }\r\n  };\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos',{description: this.state.description});\r\n      this.props.addTodo(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n    this.setState({description: ''});\r\n  };\r\n\r\n\r\n  render() {\r\n    const {description} = this.state;\r\n    const suffix = description ? <EnterOutlined onClick={this.postTodo} className=\"site-form-item-icon\"/> : <span/>;\r\n    return (\r\n      <div className=\"TodosInput\" id=\"TodosInput\">\r\n        <Input\r\n          suffix={suffix}\r\n          value={description} placeholder=\"输入你要烧什么牛肉\"\r\n          onChange={(e) => this.setState({description: e.target.value})}\r\n          onKeyUp={this.onKeyup}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodosInput);","import * as React from 'react';\r\nimport {Checkbox} from 'antd';\r\nimport {DeleteOutlined, CheckOutlined} from '@ant-design/icons';\r\nimport './TodosItem.scss';\r\nimport {connect} from 'react-redux';\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos';\r\n\r\n// @ts-ignore\r\nimport classNames from 'classnames';\r\nimport axios from '../../config/axios';\r\n\r\ninterface TTodosItemProps {\r\n  id: number\r\n  description: string\r\n  completed: boolean\r\n  editing: boolean\r\n  updateTodo: (payload: any) => any\r\n  editTodo: (id: number) => any\r\n}\r\n\r\ninterface TTodosItemState {\r\n  editText: string\r\n}\r\n\r\nclass TodosItem extends React.Component<TTodosItemProps, TTodosItemState> {\r\n  constructor(props: TTodosItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      editText: this.props.description\r\n    };\r\n  }\r\n\r\n  updateTodo = async (todoData: any) => {\r\n    if (todoData.completed) {\r\n      todoData.completed_at = new Date();\r\n    }\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, todoData);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  toEditing = () => {\r\n    this.props.editTodo(this.props.id);\r\n  };\r\n\r\n  onKeyup = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    }\r\n  };\r\n\r\n  onClick = () => {\r\n    if (this.state.editText !== '') {\r\n      this.updateTodo({description: this.state.editText});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const Editing = (\r\n      <div className=\"editing\">\r\n        <input value={this.state.editText}\r\n               onKeyUp={this.onKeyup}\r\n               onChange={e => this.setState({editText: e.target.value})}\r\n        />\r\n        <span className=\"icon-wrapper\">\r\n             <CheckOutlined className=\"successIcon\" onClick={this.onClick}/>\r\n          <DeleteOutlined className=\"deleteIcon\" onClick={e => this.updateTodo({deleted: true})}/>\r\n        </span>\r\n      </div>\r\n    );\r\n\r\n    const Text = <span className=\"text\" onDoubleClick={this.toEditing}>{this.props.description}</span>;\r\n    const todoItemClass = classNames({\r\n      TodosItem: true,\r\n      editing: this.props.editing,\r\n      completed: this.props.completed\r\n    });\r\n    return (\r\n      <div className={todoItemClass} id=\"TodosItem\">\r\n        <Checkbox checked={this.props.completed}\r\n                  onChange={e => this.updateTodo({completed: e.target.checked})}\r\n        >\r\n        </Checkbox>\r\n        {\r\n          this.props.editing ? Editing : Text\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  editTodo,\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosItem);","import * as React from 'react';\r\nimport TodosInput from './TodosInput';\r\nimport './Todos.scss';\r\nimport {connect} from 'react-redux';\r\nimport TodosItem from './TodosItem';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nclass Todos extends React.Component<any> {\r\n\r\n  get onDeletedTodos() {\r\n    return this.props.todos.filter((todo:any) => !todo.deleted);\r\n  }\r\n\r\n  get onCompletedTodos() {\r\n    return this.onDeletedTodos.filter((todo:any) => !todo.completed);\r\n  }\r\n\r\n  get completedTodos() {\r\n    return this.onDeletedTodos.filter((todo:any) => todo.completed);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Todos\" id=\"Todos\">\r\n        <TodosInput/>\r\n        <div className=\"todoList\">\r\n          {\r\n            this.onCompletedTodos.map((todo:any) =>\r\n              <TodosItem key={todo.id}\r\n                         {...todo}\r\n             />)\r\n          }\r\n          {\r\n            this.completedTodos.map((todo :any)=>\r\n              <TodosItem key={todo.id}\r\n                         {...todo}\r\n              />)\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  initTodos\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import * as React from 'react';\r\nimport './CountDown.scss';\r\n\r\ninterface TCountDownProps {\r\n  timer: number\r\n  onFinish: () => any\r\n  duration: number\r\n}\r\n\r\ninterface TCountDownState {\r\n  countDown: number\r\n}\r\n\r\nlet timeID: any = null;\r\n\r\nclass CountDown extends React.Component<TCountDownProps, TCountDownState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    };\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    timeID = setInterval(() => {\r\n      const time = this.state.countDown;\r\n      this.setState({countDown: time - 1000});\r\n      document.title = `${this.countDown} - 土豆烧牛肉`;\r\n      if (time < 1000) {\r\n        document.title = `土豆烧牛肉`;\r\n        this.props.onFinish();\r\n        clearInterval(timeID);\r\n      }\r\n\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    clearInterval(timeID);\r\n  }\r\n\r\n  get countDown() {\r\n    const mins = Math.floor(this.state.countDown / 1000 / 60);\r\n    const seconds = Math.floor(this.state.countDown / 1000 % 60);\r\n    return `${mins < 10 ? `0${mins}` : mins}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n  };\r\n\r\n  render() {\r\n    const percent = 1 - this.state.countDown / this.props.duration;\r\n    return (\r\n      <div className=\"CountDown\" id=\"CountDown\">\r\n        <span style={{position: 'relative', zIndex: 1}}>\r\n                  {this.countDown}\r\n        </span>\r\n        <div className=\"progress\" style={{width: `${percent*100}%`}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountDown;","import React from 'react';\r\nimport {Button, Input} from 'antd';\r\nimport axios from '../../config/axios';\r\nimport CountDown from './CountDown';\r\nimport {CloseCircleOutlined} from '@ant-design/icons';\r\nimport './TomatoAction.scss';\r\nimport {Modal} from 'antd';\r\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\r\n\r\nconst {confirm} = Modal;\r\n\r\ninterface TTomatoActionProps {\r\n  tomatoStart: () => void\r\n  unfinishedTomato: any\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\ninterface TTomatoActionState {\r\n  description: string\r\n}\r\n\r\nclass TomatoAction extends React.Component<TTomatoActionProps, TTomatoActionState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n\r\n  showConfirm = () => {\r\n    confirm({\r\n      title: '你正在烧特别香的牛肉, 你忍心取消?',\r\n      icon: <ExclamationCircleOutlined/>,\r\n      onOk: () => {\r\n        this.abortTomato();\r\n      },\r\n      onCancel() {},\r\n      okText: '确定',\r\n      cancelText: '取消'\r\n    });\r\n  };\r\n\r\n\r\n  updateTomato = async (tomatoData: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, tomatoData);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  abortTomato = () => {\r\n    document.title = '土豆烧牛肉';\r\n    this.updateTomato({aborted: true});\r\n  };\r\n  onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.description !== '') {\r\n      this.updateTomato({description: this.state.description, ended_at: new Date()});\r\n      this.setState({description: ''});\r\n    }\r\n  };\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate();\r\n  };\r\n\r\n  render() {\r\n    let html = <div/>;\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      html = <div className=\"button-wrapper\">\r\n        <Button onClick={() => this.props.tomatoStart()}>开始烧牛肉</Button>\r\n      </div>;\r\n    } else {\r\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\r\n      const duration = this.props.unfinishedTomato.duration;\r\n      const timeNow = new Date().getTime();\r\n      if (timeNow - startAt > duration) {\r\n        html = <div className=\"input-wrapper\">\r\n          <Input value={this.state.description}\r\n                 onChange={(e) => this.setState({description: e.target.value})}\r\n                 onKeyUp={this.onKeyUp}\r\n                 placeholder=\"请输入刚刚完成的任务\"\r\n          />\r\n          <CloseCircleOutlined className=\"closeIcon\" onClick={this.showConfirm}/>\r\n        </div>;\r\n      } else if (timeNow - startAt < duration) {\r\n        const timer = duration - timeNow + startAt;\r\n        html = <div className=\"countDown-wrapper\">\r\n          <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n          <CloseCircleOutlined className=\"closeIcon\" onClick={this.showConfirm}/>\r\n        </div>;\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\r\n        {html}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoAction;","import * as React from 'react';\r\nimport {format,parseISO} from 'date-fns';\r\nimport './TomatoList.scss'\r\ninterface TTomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = (props:any) => {\r\n  return (\r\n    <div className=\"TomatoItem\">\r\n      <span>{format(parseISO(props.started_at), 'HH:mm')}-{format(parseISO(props.ended_at), 'HH:mm')} :</span>\r\n      <span>{props.description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component<TTomatoListProps> {\r\n\r\n\r\n\r\n  get dates() {\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0,3);\r\n  }\r\n\r\n  render() {\r\n    const list = this.dates.map(date => {\r\n      const tomatoes = this.props.finishedTomatoes[date];\r\n      return (\r\n        <div key={date}>\r\n          <div className=\"title\">\r\n            <span>{date}</span>\r\n            <span>烧了 {tomatoes.length} 个土豆牛肉</span>\r\n          </div>\r\n          {\r\n            tomatoes.map((tomato:any)=><TomatoItem key={tomato.id} {...tomato} />)\r\n          }\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"TomatoList\" id=\"TomatoList\">\r\n        {list}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import React from 'react';\r\nimport './Tomatoes.scss';\r\nimport TomatoAction from './TomatoAction';\r\nimport {connect} from 'react-redux';\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes';\r\nimport axios from '../../config/axios';\r\nimport TomatoList from './TomatoList';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\nimport {format,parseISO} from 'date-fns';\r\n\r\ninterface TTomatoes {\r\n  addTomato: (payload: Object) => Object\r\n  tomatoes: any[]\r\n  initTomatoes: (payload: any) => any\r\n  updateTomato: (payload: any) => any\r\n}\r\n\r\nclass Tomatoes extends React.Component<TTomatoes> {\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(tomato => !tomato.description && !tomato.ended_at && !tomato.aborted)[0];\r\n  }\r\n\r\n  get finishedTomato() {\r\n    const finishTomatoes = this.props.tomatoes.filter(tomato => tomato.description && tomato.ended_at && !tomato.aborted);\r\n    const tomatoDate = _.groupBy(finishTomatoes, (tomato:any) => {\r\n        return format(parseISO(tomato.started_at), 'yyyy-MM-d');\r\n      }\r\n    );\r\n    return tomatoDate;\r\n  }\r\n\r\n  tomatoStart = async () => {\r\n    try {\r\n      const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\r\n      this.props.addTomato(response.data.resource);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\r\n        <TomatoAction tomatoStart={this.tomatoStart}\r\n                      updateTomato={this.props.updateTomato}\r\n                      unfinishedTomato={this.unfinishedTomato}\r\n\r\n        />\r\n        <TomatoList finishedTomatoes={this.finishedTomato}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionType';\r\n\r\n\r\nexport const addTomato = (payload:any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\nexport const initTomatoes = (payload:any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\nexport const updateTomato = (payload:any[]) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n","import * as React from 'react';\r\n\r\ninterface SPloygonProps {\r\n  data: any\r\n  totalFinishedCount: any\r\n}\r\n\r\nclass Ploygon extends React.Component<SPloygonProps> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  point = () => {\r\n    console.log(this.props.data);\r\n    const dates = Object.keys(this.props.data).sort((a, b) => {\r\n      return Date.parse(a) - Date.parse(b);\r\n    });\r\n    const firstDay = dates[0];\r\n    console.log(firstDay);\r\n    const range = new Date().getTime() - Date.parse(firstDay);\r\n    console.log(range);\r\n    if (firstDay) {\r\n      let finishCount = 0;\r\n      let finishY;\r\n      const pointArray = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240;\r\n        console.log(Date.parse(date) - Date.parse(firstDay));\r\n        finishCount += this.props.data[date].length;\r\n        console.log(this.props.totalFinishedCount);\r\n        const y = (1 - finishCount / this.props.totalFinishedCount) * 60;\r\n        finishY = y;\r\n        return `${x},${y}`;\r\n      });\r\n      console.log(pointArray);\r\n      return ['0,60', ...pointArray, `240,${finishY}`, '240,60'].join(' ');\r\n    }\r\n    return '0,60 240,60';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Ploygon\" id=\"Ploygon\">\r\n        <svg>\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\" points={this.point()}/>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ploygon;","import * as React from 'react';\r\nimport {format, parseISO} from 'date-fns';\r\nimport './HistoryTodoItem.scss';\r\nimport {connect} from 'react-redux';\r\nimport {updateTodo} from '../../../redux/actions/todos';\r\nimport axios from '../../../config/axios'\r\ninterface SHistoryTodoItemProps {\r\n  todo: any\r\n  updated_at: any\r\n  description: string\r\n  itemType: string\r\n  updateTodo: (payload:any) => any\r\n}\r\n\r\nclass HistoryTodoItem extends React.Component<SHistoryTodoItemProps> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    console.log(this.props);\r\n  }\r\n\r\n  updateTodo = async (updateData:any)=>{\r\n   try {\r\n     const response = await axios.put(`todos/${this.props.todo.id}`,updateData)\r\n     this.props.updateTodo(response.data.resource)\r\n   }catch (e) {\r\n     throw new Error(e)\r\n   }\r\n}\r\n  render() {\r\n    let action, time;\r\n    if (this.props.itemType === 'finished') {\r\n      time = this.props.todo.updated_at;\r\n      action = (<div className=\"action\">\r\n        <span onClick={()=>this.updateTodo({completed:false})}>恢复</span>\r\n        <span onClick={()=>this.updateTodo({deleted:true})}>删除</span>\r\n      </div>);\r\n    } else if (this.props.itemType === 'deleted') {\r\n      time = this.props.todo.created_at;\r\n      action = (<div className=\"action\">\r\n        <span onClick={()=>this.updateTodo({deleted:false})}>恢复</span>\r\n      </div>);\r\n    }\r\n    return (\r\n      <div className=\"HistoryTodoItem\" id=\"HistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span>{format(parseISO(time), 'HH:mm')}:</span>\r\n          <span>{this.props.todo.description}</span>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryTodoItem);\r\n\r\n","import * as React from 'react';\r\nimport {connect} from 'react-redux';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\nimport {format, parseISO} from 'date-fns';\r\nimport {Tabs} from 'antd';\r\nimport './TodoHistory.scss';\r\nimport HistoryTodoItem from './HistoryTodoItem';\r\nconst {TabPane} = Tabs;\r\n\r\ninterface STodoHistoryProps {\r\n  todos: any[]\r\n}\r\n\r\nclass TodoHistory extends React.Component<STodoHistoryProps> {\r\n  get finishedTodos() {\r\n    return this.props.todos.filter((todo: any) => todo.completed && !todo.deleted);\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter((todo: any) => todo.deleted);\r\n  }\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo: any) => {\r\n      return format(parseISO(todo.completed_at), 'yyyy-MM-d');\r\n    });\r\n  }\r\n\r\n  get dailyDeletedTodos() {\r\n    return _.groupBy(this.deletedTodos, (todo: any) => {\r\n      console.log(todo);\r\n      return format(parseISO(todo.updated_at), 'yyyy-MM-d');\r\n    });\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos).sort((a, b) =>\r\n      Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  get deletedDates() {\r\n    return Object.keys(this.dailyDeletedTodos).sort((a, b) =>\r\n      Date.parse(b) - Date.parse(a));\r\n  }\r\n\r\n  render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"todosTitle\">\r\n            <p>\r\n              <span className=\"date\">{date}</span>\r\n              <span className=\"week\">周五</span>\r\n            </p>\r\n            <p className=\"mission\">\r\n              完成了 {this.dailyFinishedTodos[date].length} 个任务\r\n            </p>\r\n          </div>\r\n          <div className=\"todosBody\">\r\n            {\r\n              this.dailyFinishedTodos[date].map((todo: any) =>\r\n                <HistoryTodoItem itemType=\"finished\" key={todo.id} todo={todo}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    const deletedTodoList = this.deletedDates.map(date => {\r\n      return (\r\n        <div key={date} className=\"dailyTodos\">\r\n          <div className=\"todosTitle\">\r\n            <p>\r\n              <span className=\"date\">{date}</span>\r\n              <span className=\"week\">周五</span>\r\n            </p>\r\n            <p className=\"mission\">\r\n              删除了 {this.dailyDeletedTodos[date].length} 个任务\r\n            </p>\r\n          </div>\r\n          <div className=\"todosBody\">\r\n            {\r\n              this.dailyDeletedTodos[date].map((todo: any) =>\r\n                <HistoryTodoItem itemType=\"deleted\" key={todo.id} todo={todo}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成的任务\" key=\"1\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除的任务\" key=\"2\">\r\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);\r\n\r\n","import * as React from 'react';\r\nimport './Statistics.scss';\r\nimport {connect} from 'react-redux';\r\nimport Ploygon from './Ploygon';\r\nimport TodoHistory from './history/TodoHistory';\r\n// @ts-ignore\r\nimport _ from 'lodash';\r\nimport {format, parseISO} from 'date-fns';\r\n\r\n\r\ninterface SStatisticsProps {\r\n  todos: any[]\r\n}\r\n\r\nclass Statistics extends React.Component<SStatisticsProps> {\r\n\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(todo => todo.completed && !todo.deleted);\r\n  }\r\n\r\n  get dailyTodo() {\r\n    const obj = _.groupBy(this.finishedTodos, (todo: any) => {\r\n      return format(parseISO(todo.completed_at), 'yyyy-MM-d');\r\n    });\r\n    console.log(obj);\r\n    return obj;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Statistics\" id=\"Statistics\">\r\n        <ul>\r\n          <li>统计</li>\r\n          <li>目标</li>\r\n          <li>番茄历史</li>\r\n          <li>\r\n            任务历史\r\n            累计完成了 {this.finishedTodos.length} 个任务\r\n\r\n            <Ploygon data={this.dailyTodo} totalFinishedCount={this.finishedTodos.length}/>\r\n          </li>\r\n        </ul>\r\n        <TodoHistory/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  todos: state.todos,\r\n  ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n\r\n","import * as React from 'react';\r\nimport {Button, Dropdown, Menu} from 'antd';\r\nimport {UserOutlined,DownOutlined } from '@ant-design/icons';\r\nimport axios from '../../config/axios';\r\nimport history from '../../config/history';\r\nimport './Home.scss'\r\nimport Todos from '../todos/Todos'\r\nimport Tomatoes from '../Tomatoes/Tomatoes';\r\nimport Statistics from '../statistics/Statistics';\r\nimport {connect} from 'react-redux';\r\nimport {initTodos} from '../../redux/actions/todos';\r\nimport {initTomatoes} from '../../redux/actions/tomatoes';\r\n\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.setItem('x-token', '');\r\n  history.push('/login');\r\n};\r\n\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\">\r\n      <UserOutlined/>\r\n      偏好设置\r\n    </Menu.Item>\r\n    <Menu.Item key=\"2\" onClick={logout}>\r\n      <UserOutlined/>\r\n      退出登录\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: {}\r\n    };\r\n  }\r\n\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get('todos');\r\n      const todos = response.data.resources.map((todo: any) => Object.assign({}, todo, {editing: false}));\r\n      this.props.initTodos(todos);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get('tomatoes');\r\n      this.props.initTomatoes(response.data.resources);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getMe();\r\n    await this.getTodos();\r\n    await this.getTomatoes()\r\n  }\r\n\r\n  getMe = async () => {\r\n    const response = await axios.get('me');\r\n    this.setState({user: response.data});\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Index\" id=\"Index\">\r\n        <header>\r\n          <h2 className=\"logo\"><strong >土豆烧牛肉</strong></h2>\r\n          <Dropdown overlay={menu}>\r\n            <Button className=\"userButton\">\r\n              <span><strong>欢迎 {this.state.user && this.state.user.account}</strong></span>\r\n              <DownOutlined className=\"userIcon\" />\r\n            </Button>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Todos/>\r\n          <Tomatoes/>\r\n        </main>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import axios from '../../config/axios';\r\nimport * as React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined, MoreOutlined} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Login.scss';\r\n\r\ninterface ILoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\nclass Login extends React.Component<any, ILoginState> {\r\n  // 第一个参数是声明 props 第二个参数声明 state\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    };\r\n  }\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    const newState = {};\r\n    // @ts-ignore\r\n    newState[key] = value;\r\n    this.setState(newState);\r\n  };\r\n  submit = async () => {\r\n    const {account, password} = this.state;\r\n    try {\r\n      await axios.post('sign_in/user', {\r\n        account,\r\n        password\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n      <div className=\"Login\" id=\"Login\">\r\n        <h1>番茄闹钟登录</h1>\r\n        <Input\r\n          placeholder=\"请输入用户名\"\r\n          value={account}\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          onChange={(e) => this.onChange('account', e.target.value)}\r\n        />\r\n        <Input.Password\r\n          prefix={<MoreOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          value={password}\r\n          onChange={(e) => this.onChange('password', e.target.value)}\r\n          placeholder=\"请输入密码\"/>\r\n        <Button className=\"LoginButton\" onClick={this.submit} type={'primary'}>登录</Button>\r\n        <p>如果你没有账号,请立即<Link to={'/signup'}>注册</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import axios from '../../config/axios';\r\nimport * as React from 'react';\r\nimport {Input, Button} from 'antd';\r\nimport {UserOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './SignUp.scss';\r\n\r\ninterface ISignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConfirmation: string\r\n}\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  // 第一个参数是声明 props 第二个参数声明 state\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConfirmation: ''\r\n    };\r\n  }\r\n\r\n  onChangeAccount = (e: any) => {\r\n    this.setState({account: e.target.value});\r\n  };\r\n\r\n  onChangePassword = (e: any) => {\r\n    this.setState({password: e.target.value});\r\n  };\r\n  onChangePasswordConfirmation = (e: any) => {\r\n    this.setState({passwordConfirmation: e.target.value});\r\n  };\r\n  submit = async () => {\r\n    const {account, password, passwordConfirmation} = this.state;\r\n    try {\r\n      await axios.post('sign_up/user', {\r\n        password_confirmation: passwordConfirmation,\r\n        account,\r\n        password\r\n      });\r\n      this.props.history.push('/');\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {account, password, passwordConfirmation} = this.state;\r\n    return (\r\n      <div className=\"Component\" id=\"SignUp\">\r\n        <h1>番茄闹钟注册</h1>\r\n        <Input\r\n          placeholder=\"请输入用户名\"\r\n          value={account}\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          onChange={this.onChangeAccount}\r\n        />\r\n        <Input.Password\r\n          prefix={<MoreOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          value={password} onChange={this.onChangePassword} placeholder=\"请输入密码\"/>\r\n        <Input.Password\r\n          prefix={<MoreOutlined className=\"site-form-item-icon\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n          value={passwordConfirmation} onChange={this.onChangePasswordConfirmation} placeholder=\"请确认密码\"/>\r\n        <Button className=\"SignUpButton\" onClick={this.submit} type={'primary'}>注册</Button>\r\n        <p>如果你有账号,请立即<Link to={'/login'}>登录</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\nimport './App.css';\nimport history from './config/history';\nimport { Router, Route } from \"react-router-dom\";\nimport Home from './components/home/Home'\nimport Login from './components/login/Login'\nimport SignUp from './components/signup/SignUp'\nclass App extends React.Component{\n  render(){\n    return (\n      <Router history={history}>\n        <div>\n        <Route exact={true} path='/' component={Home}/>\n        <Route  path='/login' component={Login}/>\n        <Route  path='/signup' component={SignUp}/>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are consideeed localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n)\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}